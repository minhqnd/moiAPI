# Define the name of the Github Action workflow and the event that triggers it
name: Run add_docstring
on:
  push:
    branches:
      - "main"

# Define the jobs that will run as part of this Github Action
jobs:
  build:
    # Specify the environment where the jobs will run
    runs-on: ubuntu-latest
    # Set the permissions of the job (in this case, the job will write to the repository, so needs write permissions)
    permissions:
      contents: write
    # Define the steps that will be executed as part of this job
    steps:
      # Step 1: Check out the code repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python and install dependencies
      - name: Set up Python and install dependencies
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - run: pip install -r .github/requirements.txt

      # Step 3: Run the add_docstring script
      - name: Run add_docstring script
        run: bash .github/run_add_docstring.sh .github/add_docstring.py
        env:
          # Pass the OpenAI API key as an environment variable
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # Step 4: Check if any changes were made
      - name: Check for changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "::set-output name=has_changes::true"
          fi
          
      # Step 5: Commit and push changes to the code repository if any changes were made
      - name: Commit and push changes
        if: steps.changes.outputs.has_changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Add docstrings to .py files"
          git push origin HEAD:${{ github.ref }}
